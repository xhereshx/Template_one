* {
  box-sizing: border-box;
}
html {
  --gray: #555;
  --black: #000;
  --white: #fff;
}
.page-topmargin {
  margin-top: 1rem;
}
.border {
  border: 1px solid #000;
}
.image--right {
  text-align: end;
}
.inline_block {
  display: inline-block;
}
.navb {
  position: sticky;
  /* margin-top: 1rem; */
  top: 0px;
  /* padding-top: 1rem; */
  /* background-color: #fff; */
}
/* navbarr-button */
/* .dropdown {
  position: relative;
  display: inline-block;
} */
.dropbtn {
  background-image: url("../img/menu.png");
  background-color: var(--white);
  border: none;
  cursor: pointer;
  width: 50px;
  height: 50px;
  font-size: 2rem;
  /* background-color: #f00; */
  opacity: 1 !important;
}

.dropdown_content {
  display: none;
  position: absolute;
  /* background-color: white; */
  /* min-width: 200px; */
  /* width: 200%; */
  overflow: auto;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
  width: 100vw;
  transform: translate(calc(-100vw + 58px));
  /* transform: translate(calc(-100vw + 85px)); */
  padding: 1rem 0rem;
}
.dropdown_content a {
  color: var(--gray);
  /* padding: 50px; */
  padding: 1rem;
  text-decoration: none;
  display: block;
}

.dropdown a:hover {
  /* background-color: #ddd; */
  color: var(--black);
}
.show {
  display: block;
}
.flexboxx {
  display: flex;
  justify-content: space-between;
  /* background-color: #f00; */
  /* position: fixed; */
}
.navb_picture {
  /* width: 50px; */
  height: 50px;
  width: 50px;
}
.navb_big {
  display: none;
}
.navb_big a {
  display: inline-block;
  width: 20%;
  text-align: center;
  height: 100%;
  /* vertical-align: baseline; */
  line-height: 50px;
  color: var(--gray);
}
.navb_big a:hover {
  color: var(--black);
}
/* a {
  background-color: #fff !important;
  opacity: 1;
} */
/* .xxx {
  position: static !important;
  z-index: -1;
} */
.conteiner,
.row,
.col {
  background-color: #fff;
}
@media screen and (min-width: 36em) {
  /* .dropdown_content {
    transform: translate(calc(-100vw + 178px));
    overflow: auto;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    z-index: 1;
    width: 100vw;
    padding: 1rem 0rem;

    position: absolute;
    top: 50px;
    left: 0px;
    transform: translate(calc(-100vw + 50px));
    transform: translate(calc(-100vw + (((100vw - 540px) / 2) + 65px)));
  } */
  /* -100vw aby se menu otočilo na druhou stranu. Bez toho by začínalo přesně pod hranou tlačítka. 65px, zhruba šířka tlačítla s paddingem. 540px šířka divu, v kterém je obrázek a tlačítko. Snažím se od translate odečíst šířku paddingu, který je mezi tlačítkem a levou stránkou obrazovky. Pokud bych to neudělal tak by odkazy byly v levo za horizontem obrazovky. Vezmu teda 100vw,což je šířka obrazovky, odečtu od toho 540px cože je šířka divu. Tím dostanu kolik px jsou oba padding(tzn, ten od obrázku nalevo, a ten od tlačítka na pravo), protože jsou dva tak to podělím dvěmi a přičtu šířku tlačítka, čímž menu začne zabírat přesně 100vh současné obrazovky */
  /* -100vw + 88px */
}
/* 576px */

@media screen and (min-width: 48em) {
  .dropdown_content {
    /* transform: translate(calc(-100vw + (((100vw - 720px) / 2) + 65px))); */
    /* display: none; */
  }
  .dropdown {
    display: none;
  }
  /* stejný princip jako u předchozího, jeho změnan šířka divu s obrázkem a tlačítkem, protože je jinak široký*/
  .navb_big {
    display: inline-block;
  }
}
/*  768px*/
@media screen and (min-width: 62em) {
  /* .dropdown_content {
    transform: translate(calc(-100vw + (((100vw - 960px) / 2) + 65px)));
  } */
  /* stejný princip jako u předchozího, jeho změnan šířka divu s obrázkem a tlačítkem, protože je jinak široký*/
}
/* 992px */
@media screen and (min-width: 75em) {
  /* .dropdown_content {
    transform: translate(calc(-100vw + (((100vw - 1140px) / 2) + 65px)));
  } */
  /* stejný princip jako u předchozího, jeho změnan šířka divu s obrázkem a tlačítkem, protože je jinak široký*/
}
/* 1200px */
